version: '3.1'
services:
  rc-mariadb:
    image: mariadb
    container_name: rc-mariadb
    environment:
      MYSQL_DATABASE: rcdb
      MYSQL_ROOT_PASSWORD: ss1235789
      MYSQL_USER: root
      MYSQL_PASSWORD: ss1235789
    ports:
      - "3306:3306"
    volumes:
      - rc-mariadb:/var/lib/mysql
    networks:
      - rc-network
    restart: unless-stopped

  rc-redis:
    image: redis
    container_name: rc-redis
    ports:
      - "6379:6379"
    volumes:
      - rc-redis:/data
    networks:
      - rc-network
    restart: unless-stopped

  rc-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: rc-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - rc-elasticsearch:/usr/share/elasticsearch/data
    networks:
      - rc-network
    restart: unless-stopped

  rc-zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: rc-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - rc-zookeeper:/var/lib/zookeeper
    networks:
      - rc-network
    restart: unless-stopped

  rc-kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: rc-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: rc-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://rc-kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - rc-zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - rc-kafka:/kafka-logs
    networks:
      - rc-network
    restart: unless-stopped

  rc-kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: rc-kafka-ui
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=rc-kafka:29092
    ports:
      - "8989:8080"
    networks:
      - rc-network
    depends_on:
      - rc-kafka
    restart: unless-stopped

  rc-was:
    image: rc_deploy
    container_name: rc-was
    build: ./
    shm_size: "30gb"
    depends_on:
      - rc-mariadb
      - rc-redis
      - rc-elasticsearch
      - rc-kafka
    ports:
      - "9999:9999"
    volumes:
      - rc-was:/usr/share/rc/data
    networks:
      - rc-network
    restart: unless-stopped

  rc-nginx:
    image: nginx:stable
    container_name: rc-nginx
    depends_on:
      - rc-was
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - rc-network
    restart: unless-stopped

# 데이터 저장을 위한 볼륨 설정
volumes:
  rc-mariadb: { }
  rc-redis: { }
  rc-elasticsearch: { }
  rc-zookeeper: { }
  rc-kafka: { }
  rc-was: { }

# 네트워크 설정
networks:
  rc-network:
    driver: bridge