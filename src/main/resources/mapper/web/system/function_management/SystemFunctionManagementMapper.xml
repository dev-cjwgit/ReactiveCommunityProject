<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cjw.reactivecommunityproject.web.system.function_management.mapper.SystemFunctionManagementMapper">
    <select id="selectList" parameterType="PaginationOffsetVO" resultType="SystemFunctionManagementListEntity">
        /* SystemFunctionManagementMapper.selectList() */
        SELECT  `uid`
              , `name`
              , `type`
              , `description`
              , `enabled`
              , `created_user_uid`
              , `created_utc_at`
              , `updated_user_uid`
              , `updated_utc_at`
        FROM rc_manage_function
        <where>
            <if test="condition.uid != null">
                AND `uid` LIKE CONCAT('%', #{condition.uid, jdbcType=VARCHAR}, '%')
            </if>
            <if test="condition.name != null">
                AND `name` LIKE CONCAT('%', #{condition.name, jdbcType=VARCHAR}, '%')
            </if>
            <if test="condition.type != null">
                AND `type` LIKE CONCAT('%', #{condition.type, jdbcType=VARCHAR}, '%')
            </if>
            <if test="condition.description != null">
                AND `description` LIKE CONCAT('%', #{condition.description, jdbcType=VARCHAR}, '%')
            </if>
            <if test="condition.startDate != null">
                AND `created_utc_at` <![CDATA[>=]]> #{condition.startDate, jdbcType=TIMESTAMP}
            </if>
            <if test="condition.endDate != null">
                AND `created_utc_at` <![CDATA[<=]]> #{condition.endDate, jdbcType=TIMESTAMP}
            </if>
        </where>
        ORDER BY `updated_utc_at` DESC
        LIMIT #{pagination.limit, jdbcType=INTEGER} OFFSET #{pagination.offset, jdbcType=INTEGER}
    </select>

    <select id="selectDetail" resultType="SystemFunctionManagementDetailEntity">
        /* SystemFunctionManagementMapper.selectDetail() */
        SELECT `uid`
             , `name`
             , `type`
             , `description`
             , `enabled`
             , `created_user_uid`
             , `created_utc_at`
             , `updated_user_uid`
             , `updated_utc_at`
        FROM rc_manage_function
        WHERE `uid` = #{uid, jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="SystemFunctionManagementInsertEntity">
        /* SystemFunctionManagementMapper.insert() */
        INSERT INTO rc_manage_function( `name`
                                      , `type`
                                      , `description`
                                      , `enabled`
                                      , `created_user_uid`
                                      , `created_utc_at`
                                      , `updated_user_uid`
                                      , `updated_utc_at`)
        VALUES ( #{name, jdbcType=VARCHAR}
               , #{type, jdbcType=VARCHAR}
               , #{description, jdbcType=VARCHAR}
               , 'Y'
               , #{userUid, jdbcType=VARCHAR}
               , CURRENT_TIMESTAMP()
               , #{userUid, jdbcType=VARCHAR}
               , CURRENT_TIMESTAMP())
    </insert>


    <update id="update" parameterType="SystemFunctionManagementModifyEntity">
        /* SystemFunctionManagementMapper.update() */
        UPDATE rc_manage_function
        SET `name`             = #{name, jdbcType=VARCHAR}
          , `type`             = #{type, jdbcType=VARCHAR}
          , `description`      = #{description, jdbcType=VARCHAR}
          , `enabled`          = #{enabled, jdbcType=VARCHAR}
          , `updated_user_uid` = #{userUid, jdbcType=VARCHAR}
          , `updated_utc_at`   = CURRENT_TIMESTAMP()
        WHERE `uid` = #{uid, jdbcType=BIGINT}
    </update>

    <delete id="delete">
        /* SystemFunctionManagementMapper.delete() */
        DELETE
        FROM rc_manage_function
        WHERE `uid` = #{uid, jdbcType=BIGINT}
    </delete>


    <select id="isExistByName" resultType="boolean">
        /* SystemFunctionManagementMapper.isExistByName() */
        SELECT COUNT(*) > 0
        FROM rc_manage_function
        <where>
            `name` = #{name, jdbcType=VARCHAR}
            <if test='uid != null'>
                AND `uid` != #{uid, jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <select id="isExistByUid" resultType="boolean">
        /* SystemRoleManagementMapper.isExistByUid() */
        SELECT COUNT(*) > 0
        FROM rc_manage_function
        WHERE `uid` = #{uid, jdbcType=BIGINT}
    </select>

    <select id="isOwner" resultType="boolean">
        /* SystemFunctionManagementMapper.isOwner() */
        SELECT COUNT(*) > 0
        FROM rc_manage_function
        WHERE `uid` = #{uid, jdbcType=TINYINT}
          AND `created_user_uid` = #{userUid, jdbcType=VARCHAR}
    </select>
</mapper>